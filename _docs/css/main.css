/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .sr-only class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: " ";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: none;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

/* GLOBAL */
main {
  max-width: 960px;
  margin: 0 auto;
}

main > section {
  max-width: 594px;
  float: left;
}

article .image {
  display: block;
  height: 328px;
  background-size: 100%;
}

article .image.typewriter {
  background-image: url('../assets/img/typewriter.jpg');
  background-position: 0 -16px;
}

main > aside {
  max-width: 314px;
  float: right;
  margin-left: 32px;
}

main > aside > article {
  margin-top: 16px;
  margin-bottom: 32px;
  border-radius: 8px;
  background-color: rgba(176, 255, 206, 0.2);
  padding: 16px;
  width: 100%;
  box-sizing: border-box;
}

main > aside > article > h3 {
  margin-top: 0;
}

main > aside img {
  max-width: 100px;
  float: right;
  border-radius: 8px;
  margin-left: 8px;
}

button {
  cursor: pointer;
  border-radius: 8px;
  background-color: #00dd55;
  border: none;
  padding: 8px 12px;
  color: #fff;
}

button:hover {
  background-color: rgba(0, 221, 85, 0.84);
}

body {
  color: #333;
  font-family: "Roboto";
}

a {
  color: #0d5;
  font-family: "Roboto Mono";
}

a, a:hover, a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

ul.links {
  margin: 0;
  padding: 0;
  list-style-type: none;
  display: block;
}

ul.links > li {
  display: inline-block;
  padding-right: 8px;
  padding-left: 8px;
}

/* HEADER */
header {
  position: fixed;
  background-color: #fff;
  width: 100%;
  padding: 16px;
  box-sizing: border-box;
  box-shadow: 0 2px 4px 0 rgba(0,0,0,.1);
}

header .container {
  box-sizing: border-box;
  max-width: 1024px;
  width: 100%;
  margin: 0 auto;
  box-sizing: border-box;
}

header .logo > img {
  height: 40px;
}

header .actions {
  float: right;
}

header .actions a {
  color: #999;
  text-transform: uppercase;
}

header .actions a:before {
  content: 'â†’';
  display: inline-block;
  margin-right: 5px;
  color: #cfcfcf;
}

header .actions a:after {
  content: '';
  display: inline-block;
  margin-left: 5px;
  color: #cfcfcf;
}

/* NAVIGATION */
nav {
  clear: both;
  text-align: center;
  padding: 16px 0 0 0;
  margin: 0;
}

nav a {
  color: #999;
  text-transform: uppercase;
}

/* MAIN */

main {
  padding: 124px 10px 10px 10px;
}


/* FOOTER */

footer {
  font-size: 0.85em;
  display: flex;
  justify-content: center;
  margin-bottom: 80px;
}

footer a {
  text-transform: uppercase;
  color: #999;
}

#menuToggle input {
  display: none;
}

#menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
  display: inline-block;
}

#menu > li {
  display: inline-block;
  padding-right: 8px;
  padding-left: 8px;
}

#menu > li.active a {
  color: #000;
}


#contact {
  margin-left: 16px;
}

@media only screen and (max-width: 960px) {
  main > section {
    float: none;
    max-width: 100%;
  }

  main > aside {
    float: none;
    margin-left: 0;
    max-width: 100%;
  }

  article .image {
    margin-left: -16px;
    margin-right: -16px;
  }
}

@media only screen and (max-width: 800px) {
  h1 {
    font-size: 1.75em;
  }

  header .container {
    padding: 0;
  }

  header .logo {
    margin-left: 48px;
    height: 32px;
  }

  nav {
    padding: 0;
  }

  article .image {
    height: 196px;
  }

  main {
    padding-top: 64px;
  }

  /* MENU */
  /*
   * Made by Erik Terwan
   * 24th of November 2015
   * MIT License
   *
   *
   * If you are thinking of using this in
   * production code, beware of the browser
   * prefixes.
   */

  #menuToggle
  {
    position: absolute;
    left: 16px;
    top: 16px;

    z-index: 1;

    -webkit-user-select: none;
    user-select: none;
  }

  #menuToggle a
  {
    text-decoration: none;
    transition: color 0.3s ease;
  }

  #menuToggle input
  {
    display: block;
    width: 40px;
    height: 32px;

    position: absolute;

    top: -7px;
    left: -5px;

    cursor: pointer;

    opacity: 0; /* hide this */
    z-index: 2; /* and place it over the hamburger */

    -webkit-touch-callout: none;
  }

  /*
   * Just a quick hamburger
   */
  #menuToggle span
  {
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    position: relative;

    background: #999;
    border-radius: 3px;

    z-index: 1;

    transform-origin: 4px 0px;

    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
    background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
    opacity 0.55s ease;
  }

  #menuToggle span:first-child
  {
    transform-origin: 0% 0%;
  }

  #menuToggle span:nth-last-child(2)
  {
    transform-origin: 0% 100%;
  }

  /*
   * Transform all the slices of hamburger
   * into a crossmark.
   */
  #menuToggle input:checked ~ span
  {
    opacity: 1;
    transform: rotate(45deg) translate(-2px, -1px);
    background: #999;
  }

  /*
   * But let's hide the middle one.
   */
  #menuToggle input:checked ~ span:nth-last-child(3)
  {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
  }

  /*
   * Ohyeah and the last one should go the other direction
   */
  #menuToggle input:checked ~ span:nth-last-child(2)
  {
    transform: rotate(-45deg) translate(0, -1px);
  }

  /*
   * Make this absolute positioned
   * at the top left of the screen
   */
  #menu
  {
    position: absolute;
    width: 280px;
    margin: -100px 0 0 -50px;
    padding: 125px 50px 50px 50px;

    background: #ededed;
    list-style-type: none;
    -webkit-font-smoothing: antialiased;
    /* to stop flickering of text in safari */

    transform-origin: 0% 0%;
    transform: translate(-100%, 0);

    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0);
  }

  #menu li
  {
    padding: 10px 0;
    display: block;
    font-size: 22px;
  }

  /*
   * And let's slide it in from the left
   */
  #menuToggle input:checked ~ ul
  {
    transform: none;
  }


  #contact {
    position: fixed;
    right: 16px;
    bottom: 16px;
    box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.15);
  }

}

